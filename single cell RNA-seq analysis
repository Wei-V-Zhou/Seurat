
# Clear the environment
rm(list = ls())
gc()
options(stringsAsFactors = FALSE)

# Load libraries
{
  library(dplyr)
  library(Seurat)
  library(cowplot)
  library(tidyverse)
  library(reticulate)
}

# Load data
if (!file.exists("m4T1.scset.Rdata")){
  dat <- read.table("m4T1.raw.featurecounts.txt", header = T)
  ann <- read.csv("m4T1.cell.annotation.csv", header = T)
  counts <- dat[ , 5:ncol(dat)]
  colnames(counts) <- ann[ , 1]
  save(counts, ann, file = "m4T1.scset.Rdata")
}
load("m4T1.scset.Rdata")

# Choose early-stage cells for analysis
ann.D4 <- ann[ann$CellType == "BoneMet_D4", ]
{
  ann.D10 <- ann[ann$CellType == "BoneMet_D10", ]
  ann.D16 <- ann[ann$CellType == "BoneMet_D16", ]
  ann.CL <- ann[ann$CellType == "CellLine", ]
  ann.PT <- ann[ann$CellType == "PrimaryTumor", ]
}
counts_D4 <- counts[ , ann.D4[ , 1]]

# Remove mCherry = 0
count <- counts_D4[ , - which((counts["mCherry", ] != 0) == FALSE)]
ann.D4 <- ann.D4[- which((counts["mCherry", ] != 0) == FALSE), ]
count <- count[- c(which(rownames(count) == "mCherry"), which(rownames(count) == "luciGFP")), ]

# Create a Seurat Object
scset <- CreateSeuratObject(
  counts = as.matrix(count),
  meta.data = ann.D4,
  project = "4T1.scRNA",
  min.cells = 3,
  min.features = 200)

# Cell QC
scset[["percent.mt"]] <- PercentageFeatureSet(scset, pattern = "^mt-")
VlnPlot(scset, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(scset, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(scset, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
CombinePlots(plots = list(plot1, plot2))
scset <- subset(scset, subset = nFeature_RNA > 5000 & nFeature_RNA < 12500 & percent.mt < 5)
dim(scset)

# Normalizing the data
scset <- NormalizeData(scset, normalization.method = "LogNormalize", scale.factor = 10000)

# Identification of highly variable features
scset <- FindVariableFeatures(scset, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(scset), 10)
# Plot varible features with and without labels
plot1 <- VariableFeaturePlot(scset)
plot2 <- LabelPoints(plot = plot1, points = top10)
CombinePlots(plots = list(plot1, plot2))

# Scaling the data
all.genes <- rownames(scset)
scset <- ScaleData(scset, features = all.genes)

# Perform linear dimensional reduction
scset <- RunPCA(scset, features = VariableFeatures(object = scset))
print(scset[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(scset, dims = 1:2, reduction = "pca")
DimPlot(scset, reduction = "pca")
DimHeatmap(scset, dims = 1, cells = 500, balanced = TRUE)
DimHeatmap(scset, dims = 1:15, cells = 500, balanced = TRUE)

# Determine the dimensionality of the dataset
scset <- JackStraw(scset, num.replicate = 100)
scset <- ScoreJackStraw(scset, dims = 1:20)
JackStrawPlot(scset, dims = 1:15)
ElbowPlot(scset)

# Cluster the cells
scset <- FindNeighbors(scset, dims = 1:15)
scset <- FindClusters(scset, resolution = 0.5)
head(Idents(scset), 6)

# Run non-linear dimensional reduction(UMAP/tSNE)
scset <- RunUMAP(scset, dims = 1:10)
DimPlot(scset, reduction = "umap", pt.size = 1)
scset <- RunTSNE(scset, dims = 1:10)
DimPlot(scset, reduction = "tsne")

# Save the data
save(scset, file = "m4T1.new.featurecounts.RData")
load("m4T1.new.featurecounts.RData")

# Find cluster biomarker
scset.markers <- FindAllMarkers(scset, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
scset.markers %>% group_by(cluster) %>% top_n(n = 2, wt = avg_logFC)
FeaturePlot(scset, features = c("Krt8", "Ngp", "Ighm", "Pld4", "Hba-a1"))
FeaturePlot(scset, features = c("Cd19", "Cd68", "Ly6g", "Sdc4"))

#============================#
#       Musician: Resonance  #
#           Date: 2019/09/06 #
# Revised author: Resonance  #
#           Time: 2019/10/30 #
#============================#
